output_dir: torchtune_output_kd/llama3_2_8B_to_1B/KD_lora_single_device

# Model Arguments
model:
  _component_: torchtune.models.llama3_2.lora_llama3_2_1b
  lora_attn_modules: ['q_proj', 'v_proj', 'output_proj']
  apply_lora_to_mlp: True
  apply_lora_to_output: False
  lora_rank: 64 # Reduced from 32
  lora_alpha: 128  # alpha=2*rank
  lora_dropout: 0.0

teacher_model:
  _component_: torchtune.models.llama3_1.llama3_1_8b

# Tokenizer
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: Llama-3.2-1B-Instruct/original/tokenizer.model
  max_seq_len: null

# For the student model
checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: Llama-3.2-1B-Instruct/
  checkpoint_files: [
    model.safetensors
  ]
  recipe_checkpoint: null
  output_dir: ${output_dir}
  model_type: LLAMA3

resume_from_checkpoint: False
save_adapter_weights_only: True

# Teacher checkpoint
teacher_checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: merged_model/
  checkpoint_files: [
    "model-00001-of-00007.safetensors",
    "model-00002-of-00007.safetensors", 
    "model-00003-of-00007.safetensors",
    "model-00004-of-00007.safetensors",
    "model-00005-of-00007.safetensors",
    "model-00006-of-00007.safetensors",
    "model-00007-of-00007.safetensors"
  ]
  recipe_checkpoint: null
  output_dir: ${output_dir}
  model_type: LLAMA3

# Dataset and Sampler
dataset:
  _component_: torchtune.datasets.instruct_dataset
  source: json
  data_files: dataset.json
  split: train

seed: null
shuffle: True
batch_size: 8  # Reduced from 12

# Optimizer and Scheduler
optimizer:
  _component_: torch.optim.AdamW
  fused: True
  weight_decay: 0.01
  lr: 1e-4

lr_scheduler:
  _component_: torchtune.training.lr_schedulers.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torchtune.modules.loss.CEWithChunkedOutputLoss

kd_loss:
  _component_: torchtune.modules.loss.ForwardKLWithChunkedOutputLoss

kd_ratio: 0.5

# Training
epochs: 10
max_steps_per_epoch: null
gradient_accumulation_steps: 8  # Increased to maintain effective batch size
clip_grad_norm: null
compile: True  # Enable compilation for memory efficiency

# Logging
metric_logger:
  _component_: torchtune.training.metric_logging.WandBLogger
  project: torchtune

# Environment
device: cuda
dtype: bf16

# Activations Memory - ENABLED for memory savings
enable_activation_checkpointing: True  # Enable to reduce memory
enable_activation_offloading: False  # Keep disabled for now

# Profiler (disabled)
profiler:
  _component_: torchtune.training.setup_torch_profiler
  enabled: False
  output_dir: ${output_dir}/profiling_outputs
  cpu: True
  cuda: True
  profile_memory: False
  with_stack: False
  record_shapes: True
  with_flops: False
  wait_steps: 5
  warmup_steps: 3
  active_steps: 2
  num_cycles: 1